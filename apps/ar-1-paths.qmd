---
title: "Exploring the AR(1) joint distribution"
format: html
filters:
  - shinylive
---

::: {.content-hidden}
$$
\newcommand{\initvar}{v_0^2}

\newcommand{\var}{\text{var}}
\newcommand{\cov}{\text{cov}}
\newcommand{\argmax}[1]{\underset{#1}{\arg\max}}
\newcommand{\argmin}[1]{\underset{#1}{\arg\min}}
\newcommand{\iid}{\overset{\textrm{iid}}{\sim}}
\newcommand{\indep}{\overset{\textrm{indep}}{\sim}}
\newcommand{\tr}{{\scriptscriptstyle\mathsf{T}}}
\newcommand{\com}{,\,}
\newcommand{\given}{\,|\,}
\newcommand{\acal}{\mathcal{A}}
\newcommand{\bcal}{\mathcal{B}}
\newcommand{\ccal}{\mathcal{C}}
\newcommand{\dcal}{\mathcal{D}}
\newcommand{\ecal}{\mathcal{E}}
\newcommand{\fcal}{\mathcal{F}}
\newcommand{\gcal}{\mathcal{G}}
\newcommand{\hcal}{\mathcal{H}}
\newcommand{\ical}{\mathcal{I}}
\newcommand{\jcal}{\mathcal{J}}
\newcommand{\kcal}{\mathcal{K}}
\newcommand{\lcal}{\mathcal{L}}
\newcommand{\mcal}{\mathcal{M}}
\newcommand{\ncal}{\mathcal{N}}
\newcommand{\ocal}{\mathcal{O}}
\newcommand{\pcal}{\mathcal{P}}
\newcommand{\qcal}{\mathcal{Q}}
\newcommand{\rcal}{\mathcal{R}}
\newcommand{\scal}{\mathcal{S}}
\newcommand{\tcal}{\mathcal{T}}
\newcommand{\ucal}{\mathcal{U}}
\newcommand{\vcal}{\mathcal{V}}
\newcommand{\wcal}{\mathcal{W}}
\newcommand{\xcal}{\mathcal{X}}
\newcommand{\ycal}{\mathcal{Y}}
\newcommand{\zcal}{\mathcal{Z}}
\newcommand{\EE}{\mathbb{E}}
\newcommand{\NN}{\mathbb{N}}
\newcommand{\PP}{\mathbb{P}}
\newcommand{\QQ}{\mathbb{Q}}
\newcommand{\RR}{\mathbb{R}}
\newcommand{\ZZ}{\mathbb{Z}}
\newcommand{\BA}{\mathbf{A}}
\newcommand{\BB}{\mathbf{B}}
\newcommand{\BC}{\mathbf{C}}
\newcommand{\BD}{\mathbf{D}}
\newcommand{\BE}{\mathbf{E}}
\newcommand{\BF}{\mathbf{F}}
\newcommand{\BG}{\mathbf{G}}
\newcommand{\BH}{\mathbf{H}}
\newcommand{\BI}{\mathbf{I}}
\newcommand{\BJ}{\mathbf{J}}
\newcommand{\BK}{\mathbf{K}}
\newcommand{\BL}{\mathbf{L}}
\newcommand{\BM}{\mathbf{M}}
\newcommand{\BN}{\mathbf{N}}
\newcommand{\BO}{\mathbf{O}}
\newcommand{\BP}{\mathbf{P}}
\newcommand{\BQ}{\mathbf{Q}}
\newcommand{\BR}{\mathbf{R}}
\newcommand{\BS}{\mathbf{S}}
\newcommand{\BT}{\mathbf{T}}
\newcommand{\BU}{\mathbf{U}}
\newcommand{\BV}{\mathbf{V}}
\newcommand{\BW}{\mathbf{W}}
\newcommand{\BX}{\mathbf{X}}
\newcommand{\BY}{\mathbf{Y}}
\newcommand{\BZ}{\mathbf{Z}}
\newcommand{\Ba}{\mathbf{a}}
\newcommand{\Bb}{\mathbf{b}}
\newcommand{\Bc}{\mathbf{c}}
\newcommand{\Bd}{\mathbf{d}}
\newcommand{\Be}{\mathbf{e}}
\newcommand{\Bf}{\mathbf{f}}
\newcommand{\Bg}{\mathbf{g}}
\newcommand{\Bh}{\mathbf{h}}
\newcommand{\Bi}{\mathbf{i}}
\newcommand{\Bj}{\mathbf{j}}
\newcommand{\Bk}{\mathbf{k}}
\newcommand{\Bl}{\mathbf{l}}
\newcommand{\Bm}{\mathbf{m}}
\newcommand{\Bn}{\mathbf{n}}
\newcommand{\Bo}{\mathbf{o}}
\newcommand{\Bp}{\mathbf{p}}
\newcommand{\Bq}{\mathbf{q}}
\newcommand{\Br}{\mathbf{r}}
\newcommand{\Bs}{\mathbf{s}}
\newcommand{\Bt}{\mathbf{t}}
\newcommand{\Bu}{\mathbf{u}}
\newcommand{\Bv}{\mathbf{v}}
\newcommand{\Bw}{\mathbf{w}}
\newcommand{\Bx}{\mathbf{x}}
\newcommand{\By}{\mathbf{y}}
\newcommand{\Bz}{\mathbf{z}}
\newcommand{\Balpha}{\boldsymbol{\alpha}}
\newcommand{\Bmu}{\boldsymbol{\mu}}
\newcommand{\Btheta}{\boldsymbol{\theta}}
\newcommand{\Beta}{\boldsymbol{\eta}}
\newcommand{\Bepsilon}{\boldsymbol{\varepsilon}}
\newcommand{\Bbeta}{\boldsymbol{\beta}}
\newcommand{\BLambda}{\boldsymbol{\Lambda}}
\newcommand{\BSigma}{\boldsymbol{\Sigma}}
\newcommand{\BOmega}{\boldsymbol{\Omega}}
\newcommand{\BPsi}{\boldsymbol{\Psi}}
\newcommand{\BGamma}{\boldsymbol{\Gamma}}
\newcommand{\BPhi}{\boldsymbol{\Phi}}
\newcommand{\BUpsilon}{\boldsymbol{\Upsilon}}
\newcommand{\BXi}{\boldsymbol{\Xi}}
\newcommand{\Bpi}{\boldsymbol{\pi}}
\newcommand{\Bzero}{\mathbf{0}}
\newcommand{\Bone}{\mathbf{1}}
$$
:::

Consider the Gaussian AR(1) written in recursive form:

$$
\begin{aligned}
y_t
&=
\beta_0
+
\beta_1
y_{t-1}
+
\varepsilon_t,
\quad
\varepsilon_t\iid\text{N}(0\com\sigma^2)
\\
y_0
&\sim
\text{N}(\mu_0,\, v_0^2).
\end{aligned}
$$

The implied joint distribution is 

$$
\begin{bmatrix}
y_0 & y_1 & \cdots & y_T
\end{bmatrix}^\tr
\sim\text{N}_{T+1}\left(\Bmu\com \BSigma\right),
$$

and the moments are given by 

$$
\begin{aligned}
E(y_t)
&=
\beta_0\sum\limits_{i=0}^{t-1}\beta_1^i
+
\beta_1^t\mu_0
\\
\var(y_t)
&=
\sigma^2
\sum\limits_{i=0}^{t-1}\beta_1^{2i}+
\beta_1^{2t}\initvar
\\
\cov(y_t\com y_s)
&=
\begin{cases}
\beta_1^{s-t}\var(y_t) & t\leq s\\
\beta_1^{t-s}\var(y_s) & s < t.
\end{cases}
\end{aligned}
$$

The following app allows you to explore how the values of the parameters affect the marginal distributions and the character of the sample paths:


```{shinylive-r}
#| standalone: true
#| viewerHeight: 800

library(shiny)

simulate_ar_1 <- function(T, b0, b1, s, m0, s0){
  y <- numeric(T)
  y[1] <- rnorm(1, m0, s0)
  for(t in 2:T){
    y[t] <- b0 + b1 * y[t - 1] + rnorm(1, 0, s)
  }
  return(y)
}

ar_1_mean <- function(t, b0, b1, m0){
  if(t == 0){
    return(m0)
  }else{
    return(b0 * sum(b1 ^ (0:(t-1))) + m0 * (b1^t)) 
  }
}

ar_1_var <- function(t, b1, s, s0){
  if(t == 0){
    return(s0^2)
  }else{
    return((s0^2) * (b1^(2*t)) + (s^2) * sum(b1 ^ (2*(0:(t-1)))))
  }
}

ar_1_sd <- function(t, b1, s, s0){
  sqrt(ar_1_var(t, b1, s, s0))
}

# Define UI for application that draws a histogram
ui <- fluidPage(
  
  # Application title
  titlePanel("Marginal distributions and sample paths of a Gaussian AR(1)"),
  
  # Sidebar with a slider input for number of bins 
  sidebarLayout(
    sidebarPanel(
      sliderInput("b0",
                  "β₀",
                  min = -5,
                  max = 5,
                  value = 0,
                  step = 0.1),
      sliderInput("b1",
                  "β₁",
                  min = -2,
                  max = 2,
                  value = 0,
                  step = 0.1),
      sliderInput("s",
                  "σ",
                  min = 0,
                  max = 2,
                  value = 1, 
                  step = 0.1),
      sliderInput("m0",
                  "μ₀",
                  min = -5,
                  max = 5,
                  value = 0,
                  step = 0.1),
      sliderInput("T",
                  "T",
                  min = 20,
                  max = 200,
                  step = 20,
                  value = 100),
      actionButton("redo", "New sample path"),
    ),
    
    # Show a plot of the generated distribution
    mainPanel(
      plotOutput("distPlot", height = "600px")
    )
  )
)

# Define server logic required to draw a histogram
server <- function(input, output) {
  
  output$distPlot <- renderPlot({
    input$redo
    b0 <- input$b0
    b1 <- input$b1
    redo <- input$redo
    T <- input$T
    s <- input$s
    m0 <- input$m0
    s0 = 1
    
    range = 0:T
    alpha = c(0.01, seq(0.1, 0.9, by = 0.1))
    
    middle <- sapply(range, ar_1_mean, b0, b1, m0)
    sds <- sapply(range, ar_1_sd, b1, s, s0)
    
    
    plot(range, middle, type = "l",
         xaxt = "n", 
         yaxt = "n",
         xlab = "t",
         ylab = expression(y[t]),
         ylim = c(-20, 20), bty = "n",
         col = "white")
    
    for(a in alpha){
      
      U = qnorm(1 - a / 2, mean = middle, sd = sds)
      L = qnorm(a / 2, mean = middle, sd = sds)
      
      polygon(
        c(range, rev(range)),
        c(U, rev(L)),
        col = rgb(1, 0, 0, 0.15),
        border = NA
      )
    }
    
    inc = 20
    axis(1, pos = 0, at = seq(0, max(range), by = inc), 
         labels = c(NA, seq(inc, max(range), by = inc)))
    axis(2, pos = 0)
    
    lines(range, simulate_ar_1(max(range) + 1, b0, b1, s, m0, s0), col = "black", lwd = 2)
  })
}

# Run the application 
shinyApp(ui = ui, server = server)
```